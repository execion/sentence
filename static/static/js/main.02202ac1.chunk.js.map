{"version":3,"sources":["game/actions.js","game/AudioButton.jsx","game/Button.jsx","game/ButtonList.jsx","game/Counter.jsx","game/gameReducer.js","game/state.js","game/helper.js","game/Game.jsx","header/Header.jsx","layout/GameLayout.jsx","login/actions.js","login/Login.jsx","layout/LoginLayout.jsx","app.jsx","sentence/actions.js","sentence/sentenceReducer.js","login/loginReducer.js","Store.js","index.jsx"],"names":["typeGame","AudioButton","id","useState","audioPlay","setAudioPlay","Audio","audioPlayer","setAudioPlayer","useEffect","load","reload","time","duration","toString","replace","Number","setTimeout","className","onClick","play","pause","Button","letter","type","change","e","target","ButtonList","WordList","AlternateLetter","Types","map","item","Counter","count","correct","incorrect","gameReducer","state","action","tempSentence","payload","split","tempList","shuffle","i","push","uuidv4","loaded","question","answerCorrect","createSentenceList","temp","filter","answerTemp","answer","concat","questionTemp","length","join","countCorrect","index","countIncorrect","questionLetters","answerLetters","defaultState","stateToCounter","sentenceId","sentence","sentences","connect","sentenceState","init","loading","undefined","useReducer","dispatch","alternateLetter","console","log","insertSentence","Header","src","alt","GameLayout","typeLogin","useForm","register","handleSubmit","onSubmit","data","user","password","username","a","dataUser","fetch","method","body","JSON","stringify","headers","response","json","placeholder","name","ref","LoginLayout","havePassport","loginState","exact","path","component","typeSentence","initialState","passport","localStorage","getItem","validateData","setItem","rootReducer","combineReducers","Store","createStore","applyMiddleware","thunk","getPassport","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.02202ac1.chunk.js","sourcesContent":["export const typeGame = {\n    INSERT_SENTENCES : \"INSERT_SENTENCES\",\n    NEXT_SENTENCES: \"NEXT_SENTENCES\",\n    ANSWER: \"ANSWER\",\n    QUESTION: \"QUESTION\"\n}","import React, {useEffect, useState} from 'react'\nimport './css/AudioButton.css';\nconst AudioButton = ({id}) => {\n    const [ audioPlay, setAudioPlay ] = useState(true);\n    const [ audioPlayer, setAudioPlayer ] = useState(new Audio(`http://localhost:8000/api/audio/${id}`));\n\n    useEffect(() => {\n        setAudioPlayer(new Audio(`http://localhost:8000/api/audio/${id}`));\n        audioPlayer.load();\n        setAudioPlay(true);\n    // eslint-disable-next-line\n    }, [id])\n\n    const audio = () => {\n        if(audioPlay) {\n            audioPlayer.play();\n            setAudioPlay(false);\n            reload();\n        } else {\n            audioPlayer.pause();\n            setAudioPlay(true);\n        }\n    }\n    const reload = () => {\n        let time = audioPlayer.duration.toString().replace(\".\",\"\");\n        Number(time);\n        setTimeout(() => {\n            setAudioPlay(true);\n        }, time);\n    }\n    return (\n        <button className=\"button-game\" onClick={() => audio()}>{\">\"}</button>\n    );\n}\n\nexport default AudioButton;","import React from 'react'\nimport './css/Button.css';\n\nconst Button = ({letter, type, change}) => {\n    return(\n        <button\n            className=\"button\"\n            id={letter.id}\n            onClick={ e => change(e.target.id, type)}\n        >\n            {letter.letter}\n        </button>\n    );\n}\n\nexport default Button;","import React from 'react'\nimport Button from \"./Button\";\n\nconst ButtonList = ({WordList, AlternateLetter, Types}) => {\n    return (\n        <>\n            {\n                WordList.map((item) => {\n                        return (\n                            <Button\n                                key={item.id}\n                                letter={item}\n                                type={Types}\n                                change={AlternateLetter}\n                            />\n                        );\n                    }\n                )\n            }\n        </>\n    );\n}\n\nexport default ButtonList;","import React from 'react'\nimport './css/Counter.css';\n\nconst Counter = ({count}) => {\n    return (\n        <div className=\"counter\">\n            <p>Correct: {count.correct}</p>\n            <p>Incorrect: {count.incorrect}</p>\n            <p>Count: {count.count}</p>\n        </div>\n    );\n}\n\nexport default Counter;","import { typeGame } from \"./actions\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { shuffle } from \"shufflr\";\n\n/* --------------------------------------------------   Reducer   -------------------------------------------------- */\n\nexport const gameReducer = (state, action) => {\n    switch (action.type) {\n        case typeGame.INSERT_SENTENCES:\n            return createSentenceList(state, action);\n        case typeGame.QUESTION:\n            return questionLetters(state, action.payload);\n        case typeGame.ANSWER:\n            return answerLetters(state, action.payload);\n        default:\n            return state;\n    }\n};\n\n/* --------------------------------------------------   Functions   -------------------------------------------------- */\n\nfunction createSentenceList(state, action) {\n    //Pasa la oración recibida a una lista en el state.\n    let tempSentence = action.payload.split(\" \");\n    let tempList = [];\n    tempSentence = shuffle(tempSentence);\n    \n    for (let i of tempSentence) {\n        tempList.push({\n            id: uuidv4(),\n            letter: i,\n        });\n    }\n    \n    tempList = shuffle(tempList);\n\n    return {\n        ...state,\n        loaded: true,\n        question: tempList,\n        answerCorrect: action.payload\n    };\n}\n\nfunction questionLetters(state, payload) {\n    //Mueve la letra de la lista question a answer en el state.\n    let temp = state.question.filter((item) => item.id === payload);\n    let answerTemp = state.answer.concat(temp);\n    let questionTemp = state.question.filter((item) => item.id !== payload);\n\n    if(questionTemp.length === 0) {\n        temp = answerTemp.map( (item) => item.letter).join(\" \");\n        if(temp === state.answerCorrect) {\n            return {\n                ...state,\n                question: [],\n                answer: [],\n                countCorrect: state.countCorrect + 1,\n                index: state.index + 1,\n                count: state.count + 1\n            }\n        } else {\n            return {\n                ...state,\n                question: [],\n                answer: [],\n                countIncorrect: state.countIncorrect + 1,\n                index: state.index + 1,\n                count: state.count + 1\n            }\n        }\n    } \n    return {\n        ...state,\n        question: questionTemp,\n        answer: answerTemp,\n    };\n}\n\nfunction answerLetters(state, payload) {\n    //Mueve la letra de la lista answer a question en el state.\n    let temp = state.answer.filter((item) => item.id === payload);\n    let questionTemp = state.question.concat(temp);\n    let answerTemp = state.answer.filter((item) => item.id !== payload);\n\n    return {\n        ...state,\n        answer: answerTemp,\n        question: questionTemp,\n    };\n}\n","export const defaultState = {\n    loaded: false,\n    index: 0,\n    question: [],\n    answer: [],\n    answerCorrect: \"\",\n    countCorrect: 0,\n    countIncorrect: 0,\n    count: 0\n};","import { typeGame } from \"./actions\";\n\nexport const insertSentence = (sentence, state, dispatch) => { \n    if (sentence.init) {\n        let payload = sentence.sentences[state.index % sentence.sentences.length].sentence;\n        console.log(payload);\n        return dispatch(\n            {\n                type: typeGame.INSERT_SENTENCES,\n                payload: payload,\n            }\n        )\n    }\n};\n\nexport const stateToCounter = (state) => {\n    return {\n        count: state.count, \n        correct: state.countCorrect, \n        incorrect: state.countIncorrect\n    }\n}\n\nexport const sentenceId = (sentence, state) => {\n    return sentence.sentences[state.index % sentence.sentences.length].id;\n}","import React, { useEffect, useReducer } from \"react\";\nimport { connect } from \"react-redux\";\nimport { typeGame } from \"./actions\";\nimport AudioButton from \"./AudioButton\";\nimport ButtonList from \"./ButtonList\";\nimport Counter from \"./Counter\";\nimport './css/Game.css';\nimport { gameReducer } from \"./gameReducer\";\nimport { defaultState } from \"./state\";\nimport { insertSentence, stateToCounter, sentenceId } from './helper';\n\nconst Game = ({sentence}) => {\n    const [state, dispatch] = useReducer(gameReducer, defaultState);\n\n    const alternateLetter = (id, type) => dispatch(\n        {\n            type: type,\n            payload: id,\n        }\n    );\n\n    useEffect(() => {\n        insertSentence(sentence, state, dispatch); //Carga la oración en el state\n        // eslint-disable-next-line\n    }, [state.index, sentence.init]);\n\n    if (state.loaded) {\n        //Si la oración esta cargada en el state, comienza.\n        return (\n            <div className=\"container\">  \n                <Counter count={stateToCounter(state)} />\n                <AudioButton id={sentenceId(sentence, state)}/>\n\n                <div className=\"answer\">\n                    <ButtonList WordList={state.answer} AlternateLetter={alternateLetter} Types={typeGame.ANSWER}/>\n                </div>\n\n                <div className=\"question\">\n                    <ButtonList WordList={state.question} AlternateLetter={alternateLetter} Types={typeGame.QUESTION}/>\n                </div>\n            </div>\n        );\n    } else {\n        return <div>Loading....</div>;\n    }\n};\n\nconst mapStateToProps = ( { sentenceState } ) => {\n    return {\n        sentence: {\n            sentences: sentenceState.sentences,\n            init: !sentenceState.loading,\n        }\n    };\n};\n\nexport default connect(mapStateToProps, undefined)(Game);\n","import React from 'react'\nimport './css/Header.css';\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <div className=\"logo\">\n                <img src=\"./img/logo.png\" alt=\"logo\"/>\n            </div>\n\n            <div className=\"nav\">\n                <button className=\"button-signup\">Sign-up</button>\n                <button className=\"button-login\">Login</button>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport Game from '../game/Game';\nimport Header from '../header/Header';\n\nconst GameLayout = () => {\n  return (\n    <>\n      <Header />\n      <Game />\n    </>\n  );\n}\n\nexport default GameLayout;","\nexport const typeLogin = {\n    SET_PASSPORT: \"SET_PASSPORT\"\n}\n\nexport const getPassport = (user, password) => async (dispatch) => {\n    const dataUser = {\n        user: user,\n        password: password\n    }\n    \n    const response = await fetch('http://localhost:8000/login/access', {\n        method: \"POST\",\n        body: JSON.stringify(dataUser),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    \n    const data = await response.json();\n\n    dispatch(\n        {\n            type: typeLogin.SET_PASSPORT,\n            payload: data\n        }\n    )\n}","import React from 'react'\nimport { connect } from 'react-redux';\nimport './css/Login.css';\nimport {getPassport} from './actions';\nimport { useForm } from 'react-hook-form';\n\nconst Login = ({dispatch}) => {\n\n    const {register, handleSubmit} = useForm();\n\n    const onSubmit = (data) => {\n        dispatch(getPassport(data.username, data.password));\n    }\n\n    return (\n        <div className=\"login-container\">\n            <form className=\"login\" onSubmit={handleSubmit(onSubmit)}>\n                <input type=\"text\" placeholder=\"User\" name=\"username\" ref={register}/>\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" ref={register}/>\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        dispatch: dispatch\n    }\n}\n\nexport default connect(undefined, mapDispatchToProps)(Login);","import React from 'react'\nimport Header from '../header/Header'\nimport Login from '../login/Login'\n\nconst LoginLayout = () => {\n    return (\n        <>\n            <Header/>\n            <Login />\n        </>\n    );\n}\n\nexport default LoginLayout","import React from 'react';\nimport GameLayout from './layout/GameLayout';\nimport { Route, Switch } from 'react-router-dom';\nimport LoginLayout from './layout/LoginLayout';\nimport { connect } from 'react-redux';\n\nconst App = ({havePassport}) => {\n    if(!havePassport) {\n        return(\n            <Switch>\n                    <Route exact path=\"/\" component={LoginLayout} />\n            </Switch>\n        )\n    } else {\n        return (\n            <>\n                <Switch>\n                    <Route exact path=\"/\" component={GameLayout} />\n                </Switch>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = ({loginState}) => {\n    return {\n        havePassport: loginState.loading,\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { shuffle } from \"shufflr\";\nimport { typeLogin } from '../login/actions';\n\nexport const typeSentence = {\n    SET_SENTENCES : \"SET_SENTENCES\",\n    GET_SENTENCES : \"GET_SENTENCES\"\n}\n\nexport const setSentences = () => {\n    return {\n        type: typeSentence.SET_SENTENCES\n    };\n};\n\nexport const getSentences = () => async ( dispatch ) => {\n    dispatch(setSentences());\n    const getPassport = {\n        passport: localStorage.getItem(\"passport\")\n    }\n    console.log(getPassport);\n    const response = await fetch(\"http://localhost:8000/api/sentences\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\" : \"application/json\"\n        },\n        body: JSON.stringify(getPassport)\n    });\n    const data = await response.json();\n\n    console.log(data);\n\n    if(typeof(data) === 'boolean') {\n        dispatch({type: typeLogin.SET_PASSPORT, payload: data});\n    } else {\n        dispatch({ type: typeSentence.GET_SENTENCES, payload: shuffle(data)});\n    }\n};","import { typeSentence } from \"./actions\"\n\nconst defaultState = {\n    loading: false,\n    sentences: [],\n}\n\nexport const sentenceReducer = (state = defaultState, action ) => {\n    switch(action.type) {\n        case typeSentence.SET_SENTENCES:\n            return { ...state, loading: true};\n        case typeSentence.GET_SENTENCES:\n            return { ...state, loading: false, sentences: action.payload };\n        default: return state;\n    }\n};","import { typeLogin } from \"./actions\"\n\nconst initialState = {\n    passport: \"passport\" in localStorage? localStorage.getItem(\"passport\") : \"\",\n    loading: \"passport\" in localStorage? true : false\n}\n\nexport const loginReducer = (state = initialState, action ) => {\n    switch(action.type) {\n        case typeLogin.SET_PASSPORT:\n            return validateData(state, action);\n        default: return state;\n    }\n};\n\nconst validateData = (state, action) => {\n    console.log(action.payload);\n    if(action.payload === false) {\n        return state;\n    } else if(action.payload.length > 4) {\n        localStorage.setItem(\"passport\", action.payload);\n        return {\n            ...state,\n            loading: true,\n            passport: action.payload\n        }\n    }\n    return state;\n}","import {sentenceReducer} from './sentence/sentenceReducer';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { loginReducer } from './login/loginReducer';\n\nconst rootReducer = combineReducers({\n    sentenceState: sentenceReducer,\n    loginState: loginReducer,\n});\n\nexport const Store = createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './app';\nimport { getSentences } from './sentence/actions';\nimport { Store } from './Store';\n\nStore.dispatch(getSentences());\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={Store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}