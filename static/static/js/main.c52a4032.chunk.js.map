{"version":3,"sources":["Theme.js","game/actions.js","game/AudioButton.jsx","game/Word.jsx","game/ListWord.jsx","game/Counter.jsx","game/helper.js","game/gameReducer.js","game/state.js","game/Game.jsx","header/Logined.jsx","header/NoLogined.jsx","header/Header.jsx","sentence/actions.js","layout/GameLayout.jsx","login/actions.js","login/Login.jsx","layout/LoginLayout.jsx","signup/Signup.jsx","layout/SignUpLayout.jsx","app.jsx","sentence/sentenceReducer.js","login/loginReducer.js","Store.js","index.jsx"],"names":["Theme","createMuiTheme","palette","primary","main","dark","light","contrastText","secondary","tertiary","text","typography","htmlFontSize","button","fontSize","textTransform","typeGame","AudioButton","id","useState","audioPlay","setAudioPlay","Audio","audioPlayer","setAudioPlayer","useEffect","load","reload","time","duration","toString","replace","Number","setTimeout","onClick","play","pause","color","style","Word","data","type","alternateLetter","React","Grid","item","xs","Button","variant","letter","ListWord","words","AlternateLetter","Types","map","Counter","count","Box","mx","maxWidth","width","textAlign","bgcolor","fontWeight","my","borderRadius","container","md","correct","incorrect","stateToCounter","state","countCorrect","countIncorrect","sentenceId","sentence","index","length","sendScore","score","a","scoreObject","fetch","method","headers","body","JSON","stringify","gameReducer","action","tempSentence","payload","split","tempList","shuffle","i","push","uuidv4","loaded","question","answerCorrect","createSentenceList","temp","filter","answerTemp","answer","concat","questionTemp","join","questionLetters","answerLetters","defaultState","connect","sentenceState","sentences","init","loading","undefined","useReducer","dispatch","insertSentence","display","flexDirection","alignItems","mb","mt","minHeight","spacing","justify","justifyContent","CircularProgress","size","Logined","username","localStorage","removeItem","window","location","NoLogined","component","Link","to","loginState","logined","height","direction","lg","ml","typeSentence","getSentences","getPassport","passport","getItem","response","json","typeLogin","LoginContainer","styled","div","LoginForm","form","Input","input","user","password","dataUser","useForm","register","handleSubmit","onSubmit","placeholder","name","ref","LoginLayout","ContainerSignUp","Form","SignUp","SignUpLayout","havePassport","exact","path","GameLayout","initialState","validateData","console","log","setItem","rootReducer","combineReducers","Store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","ThemeProvider","theme","store","document","getElementById"],"mappings":"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","file":"static/js/main.c52a4032.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\nexport const Theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#467DEB\",\n            dark: \"#20396B\",\n            light: \"#8FAFEE\",\n            contrastText: \"#fff\"\n        },\n        secondary: {\n            main: \"#20396B\",\n            contrastText: \"#467DEB\"\n        },\n        tertiary: {\n            main: \"#F57767\",\n            dark: \"#753931\",\n            light: \"#F7BAB1\",\n            contrastText: \"#fff\"\n        },\n        text: {\n            primary: \"#fff\"\n        }\n    },\n    typography: {\n        htmlFontSize: 10,\n        button: {\n            fontSize: 16,\n            textTransform: \"normal\",\n        }\n    }\n});","export const typeGame = {\n    INSERT_SENTENCES : \"INSERT_SENTENCES\",\n    NEXT_SENTENCES: \"NEXT_SENTENCES\",\n    ANSWER: \"ANSWER\",\n    QUESTION: \"QUESTION\"\n}","import React, {useEffect, useState} from 'react'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\n\nconst AudioButton = ({id}) => {\n    const [ audioPlay, setAudioPlay ] = useState(true);\n    const [ audioPlayer, setAudioPlayer ] = useState(new Audio(`http://localhost:8000/api/audio/${id}`));\n\n    useEffect(() => {\n        setAudioPlayer(new Audio(`http://192.168.0.190:8000/api/audio/${id}`));\n        audioPlayer.load();\n        setAudioPlay(true);\n    // eslint-disable-next-line\n    }, [id])\n\n    const audio = () => {\n        if(audioPlay) {\n            audioPlayer.play();\n            setAudioPlay(false);\n            reload();\n        } else {\n            audioPlayer.pause();\n            setAudioPlay(true);\n        }\n    }\n    const reload = () => {\n        let time = audioPlayer.duration.toString().replace(\".\",\"\");\n        Number(time);\n        setTimeout(() => {\n            setAudioPlay(true);\n        }, time);\n    }\n    return (\n        <PlayCircleOutlineIcon onClick={() => audio()} color=\"primary\" style={{fontSize:70}}/>\n    );\n}\n\nexport default AudioButton;","import { Button, Grid } from '@material-ui/core';\nimport React from 'react';\n\n\nconst Word = ({data, type, alternateLetter }) => {\n    const [id] = React.useState(data.id);\n\n    return(\n        <Grid item xs={\"auto\"}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={ () => alternateLetter(id, type)}\n                >\n                    {data.letter}\n                </Button>\n        </Grid>\n    );\n}\n\nexport default Word;","import React from 'react'\nimport Word from \"./Word\";\n\nconst ListWord = ({words, AlternateLetter, Types}) => {\n    return (\n        <>\n            { \n                words.map((item) => {\n                        return (\n                            <Word\n                                key={item.id}\n                                data={item}\n                                type={Types}\n                                alternateLetter={AlternateLetter}\n                            />\n                        );\n                    }\n                )\n            }\n        </>\n    );\n}\n\nexport default ListWord;","import { Box, Grid } from '@material-ui/core';\nimport React from 'react'\n\nconst Counter = ({count}) => {\n        return (\n            <Box mx=\"auto\" maxWidth=\"95%\" width=\"30rem\" textAlign=\"center\" bgcolor=\"tertiary.main\" color=\"text.primary\" fontWeight={60} fontSize={18} my={3} borderRadius=\".8rem\">\n                <Grid container>\n                    <Grid item xs={12} md={4}>\n                        <p>Correct: {count.correct}</p>\n                    </Grid>\n\n                    <Grid item xs={12} md={4}>\n                        <p>Incorrect: {count.incorrect}</p>\n                    </Grid>\n\n                    <Grid item xs={12} md={4}>\n                        <p>Count: {count.count}</p>\n                    </Grid>\n                </Grid>\n            </Box>\n        );\n    \n}\n\nexport default Counter;","import { typeGame } from \"./actions\";\n\nexport const insertSentence = (sentence, state, dispatch) => {   \n    if(sentence.length > 0) {\n        let payload = {\n            id: sentence[state.index % sentence.length].id,\n            sentence: sentence[state.index % sentence.length].sentence\n        };\n        return dispatch(\n            {\n                type: typeGame.INSERT_SENTENCES,\n                payload: payload,\n            }\n        )\n    }  \n};\n\nexport const stateToCounter = (state) => {\n    return {\n        count: state.count, \n        correct: state.countCorrect, \n        incorrect: state.countIncorrect\n    }\n}\n\nexport const sentenceId = (sentence, state) => {\n    return sentence[state.index % sentence.length].id;\n}\n\nexport const sendScore = async(id, score) => {\n    const scoreObject = {\n        id: id,\n        score: score\n    }\n    // eslint-disable-next-line\n    const response = await fetch(\"http://192.168.0.190:8000/score\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\" : \"application/json\"\n        },\n        body: JSON.stringify(scoreObject)\n    });\n}","import { typeGame } from \"./actions\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { shuffle } from \"shufflr\";\nimport { sendScore } from './helper';\n/* --------------------------------------------------   Reducer   -------------------------------------------------- */\n\nexport const gameReducer = (state, action) => {\n    switch (action.type) {\n        case typeGame.INSERT_SENTENCES:\n            return createSentenceList(state, action);\n        case typeGame.QUESTION:\n            return questionLetters(state, action.payload);\n        case typeGame.ANSWER:\n            return answerLetters(state, action.payload);\n        default:\n            return state;\n    }\n};\n\n/* --------------------------------------------------   Functions   -------------------------------------------------- */\n\nfunction createSentenceList(state, action) {\n    //Pasa la oración recibida a una lista en el state.\n    let tempSentence = action.payload.sentence.split(\" \");\n    let tempList = [];\n    tempSentence = shuffle(tempSentence);\n    \n    for (let i of tempSentence) {\n        tempList.push({\n            id: uuidv4(),\n            letter: i,\n        });\n    }\n    \n    tempList = shuffle(tempList);\n\n    return {\n        ...state,\n        loaded: true,\n        question: tempList,\n        answerCorrect: action.payload.sentence,\n        id: action.payload.id\n    };\n}\n\nfunction questionLetters(state, payload) {\n    //Mueve la letra de la lista question a answer en el state.\n    let temp = state.question.filter((item) => item.id === payload);\n    let answerTemp = state.answer.concat(temp);\n    let questionTemp = state.question.filter((item) => item.id !== payload);\n\n    if(questionTemp.length === 0) {\n        temp = answerTemp.map( (item) => item.letter).join(\" \");\n        if(temp === state.answerCorrect) {\n            sendScore(state.id, true);\n            return {\n                ...state,\n                question: [],\n                answer: [],\n                countCorrect: state.countCorrect + 1,\n                index: state.index + 1,\n                count: state.count + 1\n            }\n        } else {\n            sendScore(state.id, false);\n            return {\n                ...state,\n                question: [],\n                answer: [],\n                countIncorrect: state.countIncorrect + 1,\n                index: state.index + 1,\n                count: state.count + 1\n            }\n        }\n    } \n    return {\n        ...state,\n        question: questionTemp,\n        answer: answerTemp,\n    };\n}\n\nfunction answerLetters(state, payload) {\n    //Mueve la letra de la lista answer a question en el state.\n    let temp = state.answer.filter((item) => item.id === payload);\n    let questionTemp = state.question.concat(temp);\n    let answerTemp = state.answer.filter((item) => item.id !== payload);\n\n    return {\n        ...state,\n        answer: answerTemp,\n        question: questionTemp,\n    };\n}\n","export const defaultState = {\n    loaded: false,\n    index: 0,\n    id: 0,\n    question: [],\n    answer: [],\n    answerCorrect: \"\",\n    countCorrect: 0,\n    countIncorrect: 0,\n    count: 0\n};","import React, { useEffect, useReducer } from \"react\";\nimport { connect } from \"react-redux\";\nimport { typeGame } from \"./actions\";\nimport AudioButton from \"./AudioButton\";\nimport ListWord from \"./ListWord\";\nimport Counter from \"./Counter\";\nimport { gameReducer } from \"./gameReducer\";\nimport { defaultState } from \"./state\";\nimport { insertSentence, stateToCounter, sentenceId } from './helper';\nimport { Box, CircularProgress, Grid } from \"@material-ui/core\";\n\nconst Game = ({sentences}) => {\n    const [state, dispatch] = useReducer(gameReducer, defaultState);\n\n    const alternateLetter = (id, type) => dispatch(\n        {\n            type: type,\n            payload: id,\n        }\n    );\n\n    useEffect(() => {\n        insertSentence(sentences, state, dispatch); //Carga la oración en el state\n        // eslint-disable-next-line\n    }, [state.index]);\n\n    if (state.loaded) {\n        //Si la oración esta cargada en el state, comienza.\n        return (\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                <Counter count={stateToCounter(state)} />\n                \n                <Box mb=\"1rem\" mt=\"1rem\">\n                    <AudioButton id={sentenceId(sentences, state)}/>\n                </Box>\n        \n                <Box minHeight={2 * 108}>\n                    <Grid\n                        container\n                        spacing={1}\n                    >\n                        <ListWord words={state.answer} AlternateLetter={alternateLetter} Types={typeGame.ANSWER}/>\n                    </Grid>\n                </Box>\n                <Grid\n                    container\n                    justify={\"center\"}\n                    spacing={4}\n                >\n                    <ListWord words={state.question} AlternateLetter={alternateLetter} Types={typeGame.QUESTION}/>\n                </Grid>\n            </Box>\n        );\n    } else {\n        return(\n            <Box display=\"flex\" justifyContent=\"center\" mt={25}>\n                <CircularProgress size={100}/>\n            </Box>\n        );\n    }\n};\n\nconst mapStateToProps = ( { sentenceState } ) => {\n    return {\n        sentences: sentenceState.sentences,\n        init: !sentenceState.loading   \n    };\n};\n\nexport default connect(mapStateToProps, undefined)(Game);\n","import { Box, Button } from '@material-ui/core';\nimport React from 'react';\n\n\nconst Logined = ({username}) => {\n\n    const Logout = () => {\n        localStorage.removeItem(\"username\");\n        localStorage.removeItem(\"passport\");\n        window.location.reload();\n    }\n\n    return (\n        <Box width={200} display=\"flex\" justifyContent=\"space-between\">\n            <Button variant=\"contained\" color=\"primary\">{`${username}`}</Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => Logout()}>Logout</Button>       \n        </Box>\n    );\n}\n\nexport default Logined;","import { Box, Button } from '@material-ui/core';\nimport React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst NoLogined = () => {\n    return (\n        <Box width={200} display=\"flex\" justifyContent=\"space-between\">\n            <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/\">Login</Button>\n            <Button variant=\"contained\" color=\"secondary\" component={Link} to=\"/signup\">Sign-up</Button>\n        </Box>\n    );\n}\n\nexport default NoLogined;","import { Grid, Box } from '@material-ui/core';\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport Logined from './Logined';\nimport NoLogined from './NoLogined';\n\nconst Header = ({logined, username}) => {\n    return (\n        <Box bgcolor=\"primary.dark\" height=\"8rem\">\n            <Grid container direction=\"row\" justify=\"center\">\n                <Grid item xs={7} md={9} lg={10}>\n                    <Box display=\"flex\" alignItems=\"center\" height=\"8rem\" ml={10} fontSize={50} fontWeight=\"bold\" color=\"text.primary\">\n                        <p>\n                            ENGSyS\n                        </p>\n                    </Box>\n                </Grid>\n\n                <Grid item xs={5} md={3} lg={2}>\n                    <Box display=\"flex\" alignItems=\"center\" height=\"8rem\">\n                        {\n                            logined? <Logined username={username}/> : <NoLogined />\n                        }\n                    </Box>\n                </Grid>           \n            </Grid>\n        </Box>\n    );\n}\n\nconst mapStateToProps = ({loginState}) => {\n    return {\n        logined: loginState.loading,\n        username: loginState.username\n    }\n}\nexport default connect(mapStateToProps, undefined)(Header);","import { shuffle } from \"shufflr\";\n\nexport const typeSentence = {\n    SET_SENTENCES : \"SET_SENTENCES\",\n    GET_SENTENCES : \"GET_SENTENCES\"\n}\n\nexport const setSentences = () => {\n    return {\n        type: typeSentence.SET_SENTENCES\n    };\n};\n\nexport const getSentences = () => async ( dispatch ) => {\n    dispatch(setSentences());\n    const getPassport = {\n        passport: localStorage.getItem(\"passport\")\n    }\n    \n    const response = await fetch(\"http://192.168.0.190:8000/api/sentences\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\" : \"application/json\"\n        },\n        body: JSON.stringify(getPassport)\n    });\n    const data = await response.json();\n\n    if(typeof(data) === \"object\") {\n        dispatch({ type: typeSentence.GET_SENTENCES, payload: shuffle(data)});\n    }\n};","import { Box, CircularProgress } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Game from '../game/Game';\nimport Header from '../header/Header';\nimport { getSentences } from '../sentence/actions';\n\nconst GameLayout = ({init, getSentences}) => {\n  useEffect(() => {\n    getSentences();\n  },[getSentences])\n\n  if(init) {\n    return (\n      <>\n        <Header />\n        <Box display=\"flex\" justifyContent=\"center\" mt={25}>\n          <CircularProgress size={100}/>\n        </Box>\n      </>\n    )\n  }\n  return (\n    <>\n      <Header />\n      <Game />\n    </>\n  );\n}\n\nconst mapStateToProps = ({sentenceState}) => {\n  return {\n    init: sentenceState.loading\n  }\n}\n\n\nexport default connect(mapStateToProps, {getSentences}) (GameLayout);","\nexport const typeLogin = {\n    SET_PASSPORT: \"SET_PASSPORT\"\n}\n\nexport const getPassport = (user, password) => async (dispatch) => {\n    const dataUser = {\n        username: user,\n        password: password\n    }\n    \n    const response = await fetch('http://192.168.0.190:8000/login/access', {\n        method: \"POST\",\n        body: JSON.stringify(dataUser),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    \n    const data = await response.json();\n\n    dispatch(\n        {\n            type: typeLogin.SET_PASSPORT,\n            payload: {\n                passport: data,\n                username: user\n            }\n        }\n    )\n}","import React from 'react'\nimport { connect } from 'react-redux';\nimport {getPassport} from './actions';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\n\nconst LoginContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 4rem;\n`;\n\nconst LoginForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    height: 6rem;\n    line-height: 0;\n`;\n\nconst Input = styled.input`\n    ::placeholder {\n        color: rgba(10,10,10,.9);\n        text-indent: .2rem;\n    }\n`;\n\nconst Login = ({getPassport}) => {\n\n    const {register, handleSubmit} = useForm();\n\n    const onSubmit = (data) => {\n        getPassport(data.username, data.password);\n    }\n\n    return (\n        <LoginContainer>\n            <LoginForm onSubmit={handleSubmit(onSubmit)}>\n                <Input type=\"text\" placeholder=\"User\" name=\"username\" ref={register}/>\n                <Input type=\"password\" placeholder=\"Password\" name=\"password\" ref={register}/>\n                <Button variant=\"contained\" type=\"submit\" color=\"primary\">Login</Button>\n            </LoginForm>\n        </LoginContainer>\n    );\n}\n\n\nexport default connect(undefined, {getPassport})(Login);","import React from 'react'\nimport Header from '../header/Header'\nimport Login from '../login/Login'\n\nconst LoginLayout = () => {\n    return (\n        <>\n            <Header/>\n            <Login />\n        </>\n    );\n}\n\nexport default LoginLayout","import { Button } from '@material-ui/core';\nimport React from 'react'\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\n\nconst ContainerSignUp = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 3rem;\n`;\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    height: 12rem;\n`;\n\nconst Input = styled.input`\n    height: 1.5rem;\n    width: 16rem;\n    border: 1px solid rgb(63, 62, 62);\n\n    ::placeholder {\n        text-indent: .5rem;\n    }\n`;\n\nconst SignUp = () => {\n    const {register, handleSubmit} = useForm();\n\n    const onSubmit = async (data) => {\n        await fetch(\"http://192.168.0.190:8000/login/register\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n    }\n\n    return (\n        <>\n            <ContainerSignUp>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    <Input type=\"text\" name=\"username\" placeholder=\"username\" ref={register}/>\n                    <Input type=\"password\" name=\"password\" placeholder=\"password\" ref={register}/>\n                    <Input type=\"password\" name=\"repeatpassword\" placeholder=\"repeat password\" ref={register}/>\n                    <Input type=\"text\" name=\"email\" placeholder=\"e-mail\" ref={register}/>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">Send</Button>\n                </Form>\n            </ContainerSignUp>\n        </>\n    );\n}\n\nexport default SignUp;","import React from 'react';\nimport Header from '../header/Header';\nimport SignUp from '../signup/Signup';\n\nconst SignUpLayout = () => {\n    return (\n        <>\n            <Header />\n            <SignUp />\n        </>\n    );\n}\n\nexport default SignUpLayout;","import React from 'react';\nimport GameLayout from './layout/GameLayout';\nimport { Route, Switch } from 'react-router-dom';\nimport LoginLayout from './layout/LoginLayout';\nimport { connect } from 'react-redux';\nimport SignUpLayout from './layout/SignUpLayout';\n\nconst App = ({havePassport}) => {\n    if(!havePassport) {\n        return(\n            <Switch>\n                    <Route exact path=\"/\" component={LoginLayout} />\n                    <Route exact path=\"/signup\" component={SignUpLayout}/>\n            </Switch>\n        )\n    } else {\n        return (\n            <>\n                <Switch>\n                    <Route exact path=\"/\" component={GameLayout} />\n                </Switch>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = ({loginState}) => {\n    return {\n        havePassport: loginState.loading,\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { typeSentence } from \"./actions\"\n\nconst defaultState = {\n    loading: false,\n    sentences: [],\n}\n\nexport const sentenceReducer = (state = defaultState, action ) => {\n    switch(action.type) {\n        case typeSentence.SET_SENTENCES:\n            return { ...state, loading: true};\n        case typeSentence.GET_SENTENCES:\n            return { ...state, loading: false, sentences: action.payload };\n        default: return state;\n    }\n};","import { typeLogin } from \"./actions\"\n\nconst initialState = {\n    username: \"username\" in localStorage? localStorage.getItem(\"username\") : \"\",\n    passport: \"passport\" in localStorage? localStorage.getItem(\"passport\") : \"\",\n    loading: \"passport\" in localStorage? true : false\n}\n\nexport const loginReducer = (state = initialState, action ) => {\n    switch(action.type) {\n        case typeLogin.SET_PASSPORT:\n            return validateData(state, action);\n        default: return state;\n    }\n};\n\nconst validateData = (state, action) => {\n    console.log(action.payload);\n    if(action.payload === false) {\n        return state;\n    } else if(action.payload.passport.length > 4) {\n        localStorage.setItem(\"passport\", action.payload.passport);\n        localStorage.setItem(\"username\", action.payload.username);\n        return {\n            ...state,\n            loading: true,\n            passport: action.payload.passport,\n            username: action.payload.username\n        }\n    }\n    return state;\n}","import {sentenceReducer} from './sentence/sentenceReducer';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { loginReducer } from './login/loginReducer';\n\nconst rootReducer = combineReducers({\n    sentenceState: sentenceReducer,\n    loginState: loginReducer,\n});\n\nexport const Store = createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Theme } from './Theme';\nimport App from './app';\nimport { Store } from './Store';\nimport {ThemeProvider} from '@material-ui/core/styles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={Theme}>\n      <BrowserRouter>\n        <Provider store={Store}>\n          <App />\n        </Provider>\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}